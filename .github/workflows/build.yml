name: Build Go Project

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    build:
        runs-on: ${{ matrix.os }} # Specify the runner here

        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                go-version: [1.23]

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: ${{ matrix.go-version }}

            - name: Build for ${{ matrix.os }}
              run: |
                  OUTPUT_DIR="bin/${{ matrix.os }}"
                  BINARY_NAME="ff"

                  mkdir -p $OUTPUT_DIR

                  if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
                      GOOS=windows GOARCH=amd64 go build -o $OUTPUT_DIR/$BINARY_NAME.exe
                  elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
                      GOOS=darwin GOARCH=amd64 go build -o $OUTPUT_DIR/$BINARY_NAME
                  else
                      GOOS=linux GOARCH=amd64 go build -o $OUTPUT_DIR/$BINARY_NAME
                  fi

                  if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
                      zip -j $OUTPUT_DIR/$BINARY_NAME.zip $OUTPUT_DIR/$BINARY_NAME.exe
                  else
                      zip -j $OUTPUT_DIR/$BINARY_NAME.zip $OUTPUT_DIR/$BINARY_NAME
                  fi

            - name: Upload build artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: build
                  path: bin/
