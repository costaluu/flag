name: Build Go Project

on:
    push:
        branches:
            - main # Or your default branch name
    pull_request:
        branches:
            - main # Or your default branch name

jobs:
    build:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                go-version: [1.23] # Specify the Go version you want to use

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Go
              uses: actions/setup-go@v3
              with:
                  go-version: ${{ matrix.go-version }}

            - name: Build for ${{ matrix.os }}
              run: |
                  # Set the output directory
                  OUTPUT_DIR="bin/${{ matrix.os }}"

                  # Set the binary name
                  BINARY_NAME="ff"

                  # Create the output directory if it doesn't exist
                  mkdir -p $OUTPUT_DIR

                  # Set GOOS based on the operating system
                  GOOS=${{ matrix.os == 'windows-latest' && 'windows' || (matrix.os == 'macos-latest' && 'darwin' || 'linux') }}
                  GOARCH=amd64 go build -o $OUTPUT_DIR/$BINARY_NAME

                  # Zip the binary
                  if [ ${{ matrix.os }} == 'windows-latest' ]; then
                    zip -j $OUTPUT_DIR/$BINARY_NAME.zip $OUTPUT_DIR/$BINARY_NAME.exe
                  else
                    zip -j $OUTPUT_DIR/$BINARY_NAME.zip $OUTPUT_DIR/$BINARY_NAME
                  fi

            - name: Upload build artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: build
                  path: bin/
